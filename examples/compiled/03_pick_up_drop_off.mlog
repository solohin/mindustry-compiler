sensor vaultX vault1 @x
sensor vaultY vault1 @y
set proc "CHECK_VAULT_RES"
sensor resName sorter1 @config # which resource is stored
sensor retResName sorter2 @config
sensor resStored vault1 resName # how much of it
sensor retResStored vault1 retResName
jump 10 greaterThan retResStored 900 # emergency unload if over 900
jump 2 greaterThan resStored 700
jump 2 equal vault1 null
set proc "NEXT_UNIT"
op rand randWait 1.0 b
wait randWait
ubind @zenith
sensor ctrl @unit @controlled
jump 10 notEqual ctrl 0
ucontrol move 0 0 4 0 0 # just to label unit controlled
sensor retResStored vault1 retResName
jump 80 greaterThan retResStored 900 # emergency unload if over 900
set proc "FIND_CORE"
ulocate building core false @copper coreX CoreY coreFound core
set proc "DROP_OFF_WRONG"
ucontrol move coreX CoreY 4 0 0
jump 10 equal @unit null
sensor itemsOnHand @unit @totalItems
ucontrol itemDrop core itemsOnHand 0 0 0
wait 0.1
sensor itemsOnHand @unit @totalItems
jump 21 greaterThan itemsOnHand 0
set proc "PICK_UP"
sensor resStored vault1 resName
jump 2 greaterThan resStored 700
sensor resAtCore core resName
jump 87 greaterThan 300 resAtCore
sensor ctrl @unit @controlled
jump 10 notEqual ctrl @this
sensor resName sorter1 @config
ucontrol approach coreX CoreY 2 0 0
sensor unitCapacity @unit @itemCapacity
sensor resName sorter1 @config
ucontrol itemTake core resName unitCapacity 0 0
wait 0.1
sensor itemsOnHand @unit @totalItems
jump 29 notEqual itemsOnHand unitCapacity
set proc "DROP_OFF"
sensor firstItem @unit @firstItem
jump 10 notEqual firstItem resName
sensor ctrl @unit @controller
jump 10 notEqual ctrl @this
sensor resStored vault1 resName # how much of it
jump 0 equal resStored 1000
jump 0 equal vaultX null
ucontrol move vaultX vaultY 4 0 0
ucontrol itemDrop vault1 itemsOnHand 0 0 0
wait 0.1
sensor itemsOnHand @unit @totalItems
jump 44 greaterThan itemsOnHand 0
set proc "RET_PICK_UP"
sensor ctrl @unit @controlled
jump 10 notEqual ctrl @this
sensor retResName sorter2 @config
jump 68 equal retResName null
sensor retResStored vault1 retResName
jump 68 greaterThan unitCapacity retResStored
ucontrol move vaultX vaultY 4 0 0
ucontrol itemTake vault1 retResName unitCapacity 0 0
sensor itemsOnHand @unit @totalItems
jump 57 notEqual itemsOnHand unitCapacity
set proc "CHECK_REPEAT"
sensor resName sorter1 @config
sensor resStored vault1 resName
jump 21 greaterThan 800 resStored
set proc "UNBIND"
ulocate building core false @copper coreX CoreY coreFound core
ucontrol move coreX CoreY 4 0 0
sensor itemsOnHand @unit @totalItems
ucontrol itemDrop core itemsOnHand 0 0 0
jump 72 greaterThan itemsOnHand 0
ucontrol unbind 0 0 0 0 0
jump 0 equal 1 1
set proc "EMERG_UNLOAD"
ulocate building core false @copper coreX CoreY coreFound core
ucontrol move coreX CoreY 4 0 0
sensor itemsOnHand @unit @totalItems
ucontrol itemDrop core itemsOnHand 0 0 0
jump 80 greaterThan itemsOnHand 0
jump 57 equal 1 1
set proc "CHILL"
ucontrol unbind 0 0 0 0 0
wait 10
jump 2 equal 1 1